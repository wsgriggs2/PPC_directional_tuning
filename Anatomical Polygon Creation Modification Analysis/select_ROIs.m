function combined_ROI_mask = select_ROIs(ROI_table, yPix, xPix, varargin)
%% Load in previously defined ROIs
% Accept a table with standardized format for ROIs (vertices + rotations)
% and convert into logical mask of the specified ROIs
% Inputs:
%   ROI_table - As generated by `save_new_ROIs.m` function. Should be a
%               MATLAB table with 2 columns (with row name indicating name
%               of the ROI). Two columns are: vertices (nx2) and rotation
%               (scalar)
%   yPix, xPix - Dimensions of the mask desired
%   varargin
%       verbose - Do you want to see plots of the selected ROIs?
%       automatic_loading - Skip the user dialog for batch processing
%       angiogram - If you want to overlay the selected ROIs on an
%                   anatomical image
% Outputs:
%   combined_ROI_mask - A logical mask that is the union of all selected
%                       ROIs
%
% Written by Whitney Griggs 2022/02/08
%% Input parsing
p = inputParser;
p.CaseSensitive = false;
p.addParameter('verbose', false)
p.addParameter('automatic_loading', false);
p.addParameter('angiogram', []);
p.parse(varargin{:});
inputs = p.Results;
%% Select ROIs
if ~inputs.automatic_loading
    % Specify which regions we want to analyze
    % use a GUI to select which ones you want to load
    [indx,tf] = listdlg('PromptString', 'Select ROIs to analyze:',...
        'SelectionMode', 'multiple',...
        'ListString', ROI_table.Properties.RowNames);
else
    indx = 1:1:height(ROI_table);
    tf = true;
end

%% Create union of all ROIs specified
% Create an empty combined mask
combined_ROI_mask = false(yPix, xPix);

if inputs.verbose
   figure;
   tld = tiledlayout('flow');
end

% Find union of all ROIs specified
if tf
    for region = 1:length(indx)
        % Create mask for each ROI
        ROI_boundary = cell2mat(ROI_table{indx(region), 'Boundary'});
        ROI_mask = poly2mask(ROI_boundary(:, 1), ROI_boundary(:, 2), yPix, xPix);
        ROI_polygon = polyshape(ROI_boundary(:, 1), ROI_boundary(:, 2));
        
        % Combine across all ROI masks specified
        combined_ROI_mask = ROI_mask | combined_ROI_mask;
        
        % Plot things if desired
        if inputs.verbose
            nexttile(region);
            if isempty(inputs.angiogram)
                plot(ROI_polygon);
                axis image;
            else
                imagesc(inputs.angiogram);
                ylimits = ylim;
                xlimits = xlim;
                hold on;
                plot(ROI_polygon);
                hold off;
                axis image;
                ylim(ylimits);
                xlim(xlimits);
            end
            title(sprintf('ROI - %s', ROI_table.Properties.RowNames{indx(region)}));
        end % If verbose
    end % for loop over regions
else
    % If no ROI is chosen, then assume that the user entered this function
    % by accident and wants to use entire image.
    combined_ROI_mask = true(yPix, xPix);
end